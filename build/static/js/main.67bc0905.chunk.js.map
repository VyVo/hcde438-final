{"version":3,"sources":["helpers.js","components/Header.js","components/Article.js","components/Display.js","components/Select.js","components/App.js","components/NotFound.js","registerServiceWorker.js","index.js"],"names":["exports","siteName","Header","className","to","React","Component","Article","props","details","src","urlToImage","alt","href","url","target","title","description","Display","state","articles","this","getArticles","default","nextProps","setState","axios","get","then","response","data","console","log","catch","error","articleState","views","length","Object","keys","map","article","key","Select","value","onChange","bind","apiUrl","event","sourcesData","sources","allSources","paper","id","name","App","NotFound","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","WebFont","load","google","families","render","path","exact","component","document","querySelector","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.67bc0905.chunk.js","sourcesContent":["// App Title\nexports.siteName = 'HCDE438 Final';\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { siteName } from '../helpers';\n\nclass Header extends React.Component {\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-inverse fixed-top\">\n                <div className=\"container-fluid\">\n                    <Link to=\"/\" className=\"navbar-brand\">{siteName} </Link>\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\n\nconst Article = (props) => {\n    const { details } = props;\n    return (\n      <div className=\"col-lg-4 col-md-6 col-sm-6 col-xs-12\">\n        <div className=\"card\">\n            <img className=\"card-img-top\" src={details.urlToImage} alt=\"NewsImage\" />\n            <div className=\"card-block\">\n                <h6 className=\"card-title\">\n                <a href={details.url} target=\"_blank\">\n                {details.title}\n                </a>\n                </h6>\n                <p className=\"card-text\">{details.description}</p>\n            </div>\n        </div>\n      </div>\n    )\n}\n\nexport default Article;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Article from './Article';\n\nclass Display extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            articles: []\n        };\n    }\n\n    componentDidMount() {\n        this.getArticles(this.props.default);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps !== this.props) {\n            this.setState({\n                url: `https://newsapi.org/v2/top-headlines?sources=${nextProps.default}&apiKey=fc731e84c3eb443698e2d23138af027e`\n            });\n            this.getArticles(nextProps.default);\n        }\n    }\n\n    getArticles(url) {\n        this.setState({ articles: [] });\n        const API = 'fc731e84c3eb443698e2d23138af027e';\n        axios.get(`https://newsapi.org/v2/top-headlines?sources=${url}&apiKey=${API}`)\n            .then((response) => {\n                const data = response.data.articles;\n                console.log(data);\n                this.setState({ articles: data });\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    }\n\n    render() {\n        const articleState = this.state.articles;\n        let views = <div>Loading...</div>\n        if (articleState && articleState.length > 1) {\n            views = Object.keys(articleState).map(article => <Article key={article} details={articleState[article]} />)\n        }\n        return (\n            <div className=\"container\">\n            <div className=\"row\">\n                <br />\n                <br />\n                {views}\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Display;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Display from './Display';\n\n\nclass Select extends Component {\n    constructor(props) {\n        // Pass props to parent class\n        super(props);\n        this.state = {\n            data: [],\n            value: this.props.default,\n        }\n        this.onChange = this.onChange.bind(this);\n        this.apiUrl = 'https://newsapi.org/v2/sources?language=en&apiKey=d8a2725a8955420cbde72c01245fd36c'\n    }\n    // Handle the Select Change from the Select Options\n    onChange(event) {\n        this.setState({ value: event.target.value });\n        console.log(this.state.value);\n    }\n\n    //Get News SOurces from the API\n    componentDidMount() {\n        axios.get(this.apiUrl)\n            .then((response) => {\n                let sourcesData = response.data;\n                this.setState({ data: sourcesData.sources });\n            })\n        console.log(this.state.data);\n    }\n\n    // Render Method\n    render() {\n        const allSources = this.state.data;\n        return (\n            <div>\n              <div className=\"row text-center\">\n              <div className=\"col-lg-12\">\n                <select value={this.state.value} onChange={this.onChange}>\n                    {\n                        Object.keys(allSources).map(paper => <option key={paper} value={allSources[paper].id}>{allSources[paper].name}</option>)\n                    }\n                </select>\n                </div>\n              </div>\n              <br />\n              <div className=\"row\">\n                    <br />\n                    <Display default={this.state.value} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Select;","import React, { Component } from 'react';\nimport Header from './Header';\nimport Select from './Select';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"container text-center\">\n          <h5 className=\"pageHead\"> Select a News Source from the List</h5>\n          <Select default=\"bbc-news\"/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from './Header';\n\nclass NotFound extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <Header />\n                <div className=\"container text-center\">\n                    <h1>404</h1>\n                    <h5> Not Found</h5>\n                    <Link to=\"/\">Go Back Home</Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NotFound;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\nimport App from './components/App';\nimport NotFound from './components/NotFound';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nimport './css/bootstrap.min.css';\nimport './css/font-awesome.min.css';\nimport './css/style.css';\n\n/*\n fonts Import here\n*/\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n  google: {\n    families: ['Karla', 'Lato', 'Open Sans', 'Roboto', 'sans-serif']\n  }\n});\n\n\n\n/*\nSTateless Router Components Setup\n*/\n\nconst Root = () => {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/\" exact component={App} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\nrender(<Root />, document.querySelector('#root'));\nregisterServiceWorker();\n"],"sourceRoot":""}